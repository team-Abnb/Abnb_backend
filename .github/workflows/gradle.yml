# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:

    branches: [ "kss123456789-patch-1" ]
  pull_request:
    branches: [ "kss123456789-patch-1" ]


permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

        
    - uses: actions/checkout@v3
    - run: touch ./src/main/resources/application-secret.properties
    - run: echo "${{ secrets.APPLICATION_SECRET_PROPERTIES }}" > ./src/main/resources/application-secret.properties
    - run: cat ./src/main/resources/application-secret.properties
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew clean build --exclude-task test
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: cicdsample
        path: build/libs/*.jar
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: cicdsample
          
      - name: Upload JAR to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }} # 원격 서버의 IP 주소
          username: ${{ secrets.SSH_USER }} # 원격 서버에 접속할 사용자 이름
          key: ${{ secrets.SSH_PRIVATE_KEY }} # 원격 서버 접속에 사용되는 SSH 개인 키
          source: "build/libs/*.jar" # 업로드할 JAR 파일의 경로 또는 패턴
          target: "~/cicd" # JAR 파일을 원격 서버에 저장할 경로
